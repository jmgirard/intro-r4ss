---
title: "Day 1B"
format:
  html:
    css: ../styles.css
    highlight-style: github
---

![](../img/spreadsheets_2780E3.svg){.hero}


We continue after lunch with an introduction to more complex object types in R (i.e., *vectors* for storing collections of multiple objects, *strings* for storing text data, and *tibbles* for storing data sets), packages for adding new features to R, best practices for organizing data in spreadsheets, and importing/exporting data files into/from R.

## Slides

<iframe class="slide-deck" src="./Slides/1B_Slides.html" title="Day 1B Slideshow">
</iframe>

[Click here to view the slides in their own window.](./Slides/01B_Slides.html)

## Practice

### Question 1.

Imagine that you ran a stand selling bananas for three days. On the first day, you sold \$30 worth of bananas and spent \$15 on supplies. On the second day, you sold \$50 worth of bananas and spent \$15 on supplies. On the third day, you sold $40 worth of bananas and spent \$100 on repairs to the stand (due to an unfortunate fire).

a) Create two vectors named `sales` and `costs` to store how much you sold and how much you spent on each day, respectively.

b) Subtract the `costs` object from the `sales` object and save the result to a new object named `profits`. Print this to see your profits per day.

c) Use the `sum()` function to calculate your total profits over all three days. Was your effort *fruitful*, i.e., did you make money overall?

<p><details>
<summary>Click here for the answer key</summary>
<blockquote>

**Answer (a)**
```{r}
#| collapse: true

sales <- c(30, 50, 40)
costs <- c(15, 15, 100)
```

**Answer (b)**
```{r}
#| collapse: true

profits <- sales - costs
profits
```

**Answer (c)**
```{r}
#| collapse: true

sum(profits)
```
No, I lost money!

</blockquote></details></p>

---

### Question 2.

a) Create a character vector named `flavors` that contains the following strings and print it: 
    - Cookies & Cream
    - Americone Dream (R)
    - Bob Marley's 1 Love
b) Use a function to calculate the number of strings in `flavors`.
c) Use another function to calculate the number of characters in each string in `flavors`.
d) Let R know how you feel about ice cream by using a function to either make all the characters in `flavors` uppercase (you LOVE ice cream) or lowercase (you don't love ice cream).

<p><details>
<summary>Click here for the answer key</summary>
<blockquote>

**Answer (a)**
```{r}
#| comment: "#>"
#| collapse: true

flavors <- c("Cookies & Cream", "Americone Dream (R)", "Bob Marley's 1 Love")
flavors
```

**Answer (b)**
```{r}
#| comment: "#>"
#| collapse: true

length(flavors)
```

**Answer (c)**
```{r}
#| comment: "#>"
#| collapse: true

nchar(flavors)
```

**Answer (d)**
```{r}
#| comment: "#>"
#| collapse: true

toupper(flavors)
tolower(flavors)
```

</blockquote>
</details></p>

---

## Question 3.

Install the `praise` package. Then load the installed package in your Quarto document and experiment with the `praise()` function by running it several times with no arguments. What does the function seem to do?

<p><details>
<summary>Click here for the answer key</summary><blockquote>
**Answer**

```{r}
#| collapse: true

# install.packages("praise")
library(praise)
praise()
praise()
```

The function seems to create strings that praise/compliment the user.
</blockquote></details></p>

---

## Question 4.

The following table summarizes the season information for the eight seasons of AMC's *Breaking Bad* show. 

a) Tidy up this data and save it to a tibble. Decide for yourself how to handle season 5 (should it be a single observation or two?). For the first and last aired dates, just store the year as a number.

b) Save the tibble you created to a CSV file named "breaking_bad.csv".

![](../img/breaking_bad_wikipedia.png)

<p><details>
<summary>Click here for the answer key</summary><blockquote>

**Answer (a)**

- Version with one observation for the season five parts

```{r}
#| message: false
#| collapse: true

library(tidyverse)
season <- c(1, 2, 3, 4, 5)
episodes <- c(7, 13, 13, 13, 16)
first_air <- c(2008, 2009, 2010, 2011, 2012)
last_air <- c(2008, 2009, 2010, 2011, 2013)
network <- "AMC"
breaking_bad <- 
  tibble(season, episodes, first_air, last_air, network)
breaking_bad
```

- Version with two separate observations for the season five parts

```{r}
#| collapse: true

season <- c(1, 2, 3, 4, 5.1, 5.2)
episodes <- c(7, 13, 13, 13, 8, 8)
first_air <- c(2008, 2009, 2010, 2011, 2012, 2013)
last_air <- c(2008, 2009, 2010, 2011, 2012, 2013)
network <- "AMC"
breaking_bad <- 
  tibble(season, episodes, first_air, last_air, network)
breaking_bad
```

**Answer (b)**

```{r}
#| message: false
#| eval: false

write_csv(breaking_bad, "breaking_bad.csv")
```


## Readings

  -   ["Section 2.2.1: The penguins data frame"](https://r4ds.hadley.nz/data-visualize.html#the-penguins-data-frame) from *R4DS (2E)*
  -   ["Section 6.2: Tidy Data"](https://r4ds.hadley.nz/data-tidy.html#sec-tidy-data) from *R4DS (2E)*
  -   ["Chapter 8: Data Import"](https://r4ds.hadley.nz/data-import.html) from *R4DS (2E)*
  - ["Data organization in spreadsheets"](https://doi.org/10.1080/00031305.2017.1375989) in *The American Statistician*
  - ["Chapter 15: Strings](https://r4ds.hadley.nz/strings.html) in *R4DS (2E)*


## Fun Stuff

### "Who's" on First?

A lesson about the importance of strings...

{{< video https://www.youtube-nocookie.com/embed/2ZksQd2fC6Y >}}

### Fundamentals of Tidying

Marie doesn't like formatting-as-data either...

{{< video https://www.youtube-nocookie.com/embed/bjUlC8aEb7s >}}


::: {.text-center}
<a href="../Day2/day2A.html" class="btn btn-primary mt-5" role="button" >Continue to Day 2A Materials&nbsp;&nbsp;&raquo;</a>
:::
