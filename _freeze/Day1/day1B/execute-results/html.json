{
  "hash": "bd31a0246a2f584ed574c181daf33873",
  "result": {
    "markdown": "---\ntitle: \"Day 1B\"\nformat:\n  html:\n    css: ../styles.css\n---\n\n\n![](../img/spreadsheets_2780E3.svg){.hero}\n\n\nWe continue after lunch with an introduction to more complex object types in R (i.e., *vectors* for storing collections of multiple objects, *strings* for storing text data, and *tibbles* for storing data sets), packages for adding new features to R, best practices for organizing data in spreadsheets, and importing/exporting data files into/from R.\n\n## Slides\n\n<iframe class=\"slide-deck\" src=\"./Slides/1B_Slides.html\" title=\"Day 1B Slideshow\">\n</iframe>\n\n[Click here to view the slides in their own window.](./Slides/01B_Slides.html)\n\n## Practice\n\n### Question 1.\n\na) Create a character vector named `flavors` that contains the following strings and print it: \n    - Cookies & Cream\n    - Americone Dream (R)\n    - Bob Marley's 1 Love\nb) Use a function to calculate the number of strings in `flavors`.\nc) Use another function to calculate the number of characters in each string in `flavors`.\nd) Let R know how you feel about ice cream by using a function to either make all the characters in `flavors` uppercase (you LOVE ice cream) or lowercase (you don't love ice cream).\n\n<p><details>\n<summary>Click here for the answer key</summary>\n<blockquote>\n\n**Answer (a)**\n\n::: {.cell}\n\n```{.r .cell-code}\nflavors <- c(\"Cookies & Cream\", \"Americone Dream (R)\", \"Bob Marley's 1 Love\")\nflavors\n#> [1] \"Cookies & Cream\"     \"Americone Dream (R)\" \"Bob Marley's 1 Love\"\n```\n:::\n\n\n**Answer (b)**\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(flavors)\n#> [1] 3\n```\n:::\n\n\n**Answer (c)**\n\n::: {.cell}\n\n```{.r .cell-code}\nnchar(flavors)\n#> [1] 15 19 19\n```\n:::\n\n\n**Answer (d)**\n\n::: {.cell}\n\n```{.r .cell-code}\ntoupper(flavors)\n#> [1] \"COOKIES & CREAM\"     \"AMERICONE DREAM (R)\" \"BOB MARLEY'S 1 LOVE\"\ntolower(flavors)\n#> [1] \"cookies & cream\"     \"americone dream (r)\" \"bob marley's 1 love\"\n```\n:::\n\n\n</blockquote>\n</details></p>\n\n---\n\n## Question 2.\n\nThe following table summarizes the season information for the eight seasons of AMC's *Breaking Bad* show. \n\na) Tidy up this data and save it to a tibble. Decide for yourself how to handle season 5 (should it be a single observation or two?). For the first and last aired dates, just store the year as a number.\n\nb) Save the tibble you created to a CSV file named \"breaking_bad.csv\".\n\n![](../../img/breaking_bad_wikipedia.png)\n\n<p><details>\n<summary>Click here for the answer key</summary><blockquote>\n\n**Answer (a)**\n\nVersion with one observation for the season five parts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nseason <- c(1, 2, 3, 4, 5)\nepisodes <- c(7, 13, 13, 13, 16)\nfirst_air <- c(2008, 2009, 2010, 2011, 2012)\nlast_air <- c(2008, 2009, 2010, 2011, 2013)\nnetwork <- \"AMC\"\nbreaking_bad <- \n  tibble(season, episodes, first_air, last_air, network)\nbreaking_bad\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  season episodes first_air last_air network\n   <dbl>    <dbl>     <dbl>    <dbl> <chr>  \n1      1        7      2008     2008 AMC    \n2      2       13      2009     2009 AMC    \n3      3       13      2010     2010 AMC    \n4      4       13      2011     2011 AMC    \n5      5       16      2012     2013 AMC    \n```\n:::\n:::\n\n\nVersion with two separate observations for the season five parts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nseason <- c(1, 2, 3, 4, 5.1, 5.2)\nepisodes <- c(7, 13, 13, 13, 8, 8)\nfirst_air <- c(2008, 2009, 2010, 2011, 2012, 2013)\nlast_air <- c(2008, 2009, 2010, 2011, 2012, 2013)\nnetwork <- \"AMC\"\nbreaking_bad <- \n  tibble(season, episodes, first_air, last_air, network)\nbreaking_bad\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  season episodes first_air last_air network\n   <dbl>    <dbl>     <dbl>    <dbl> <chr>  \n1    1          7      2008     2008 AMC    \n2    2         13      2009     2009 AMC    \n3    3         13      2010     2010 AMC    \n4    4         13      2011     2011 AMC    \n5    5.1        8      2012     2012 AMC    \n6    5.2        8      2013     2013 AMC    \n```\n:::\n:::\n\n\n**Answer (b)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(breaking_bad, \"breaking_bad.csv\")\n```\n:::\n\n\n\n## Readings\n\n  -   [\"Section 2.2.1: The penguins data frame\"](https://r4ds.hadley.nz/data-visualize.html#the-penguins-data-frame) from *R4DS (2E)*\n  -   [\"Section 6.2: Tidy Data\"](https://r4ds.hadley.nz/data-tidy.html#sec-tidy-data) from *R4DS (2E)*\n  -   [\"Chapter 8: Data Import\"](https://r4ds.hadley.nz/data-import.html) from *R4DS (2E)*\n  - [\"Data organization in spreadsheets\"](https://doi.org/10.1080/00031305.2017.1375989) in *The American Statistician*\n\n\n## Fun Stuff\n\n### \"Who's\" on First?\n\nA lesson about the importance of strings...\n\n\n{{< video https://www.youtube-nocookie.com/embed/2ZksQd2fC6Y >}}\n\n\n\n### Fundamentals of Tidying\n\nShe doesn't like formatting-as-data either...\n\n\n{{< video https://www.youtube-nocookie.com/embed/bjUlC8aEb7s >}}\n\n\n\n\n::: {.text-center}\n<a href=\"../Day2/day2A.html\" class=\"btn btn-primary mt-5\" role=\"button\" >Continue to Day 2A Materials&nbsp;&nbsp;&raquo;</a>\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}